// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: pathao/proto/v1/common/enums.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enums_RideType int32

const (
	Enums_INVALID_RIDETYPE Enums_RideType = 0
	Enums_BIKE             Enums_RideType = 1
	Enums_CAR_PLUS         Enums_RideType = 2
	Enums_BICYCLE          Enums_RideType = 4
	Enums_CAR_LITE         Enums_RideType = 5
	Enums_AUTO             Enums_RideType = 6
)

// Enum value maps for Enums_RideType.
var (
	Enums_RideType_name = map[int32]string{
		0: "INVALID_RIDETYPE",
		1: "BIKE",
		2: "CAR_PLUS",
		4: "BICYCLE",
		5: "CAR_LITE",
		6: "AUTO",
	}
	Enums_RideType_value = map[string]int32{
		"INVALID_RIDETYPE": 0,
		"BIKE":             1,
		"CAR_PLUS":         2,
		"BICYCLE":          4,
		"CAR_LITE":         5,
		"AUTO":             6,
	}
)

func (x Enums_RideType) Enum() *Enums_RideType {
	p := new(Enums_RideType)
	*p = x
	return p
}

func (x Enums_RideType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_RideType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[0].Descriptor()
}

func (Enums_RideType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[0]
}

func (x Enums_RideType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_RideType.Descriptor instead.
func (Enums_RideType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 0}
}

type Enums_ParcelType int32

const (
	Enums_INVALID_ParcelType Enums_ParcelType = 0
	Enums_DOCUMENT           Enums_ParcelType = 1
	Enums_PACKAGE            Enums_ParcelType = 2
	Enums_ACCESSORIES        Enums_ParcelType = 3
	Enums_ELECTRONICS        Enums_ParcelType = 4
	Enums_GIFTS              Enums_ParcelType = 5
	Enums_PERISHABLE         Enums_ParcelType = 6
	Enums_HOMEMADE_FOOD      Enums_ParcelType = 7
)

// Enum value maps for Enums_ParcelType.
var (
	Enums_ParcelType_name = map[int32]string{
		0: "INVALID_ParcelType",
		1: "DOCUMENT",
		2: "PACKAGE",
		3: "ACCESSORIES",
		4: "ELECTRONICS",
		5: "GIFTS",
		6: "PERISHABLE",
		7: "HOMEMADE_FOOD",
	}
	Enums_ParcelType_value = map[string]int32{
		"INVALID_ParcelType": 0,
		"DOCUMENT":           1,
		"PACKAGE":            2,
		"ACCESSORIES":        3,
		"ELECTRONICS":        4,
		"GIFTS":              5,
		"PERISHABLE":         6,
		"HOMEMADE_FOOD":      7,
	}
)

func (x Enums_ParcelType) Enum() *Enums_ParcelType {
	p := new(Enums_ParcelType)
	*p = x
	return p
}

func (x Enums_ParcelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_ParcelType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[1].Descriptor()
}

func (Enums_ParcelType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[1]
}

func (x Enums_ParcelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_ParcelType.Descriptor instead.
func (Enums_ParcelType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 1}
}

type Enums_ServiceType int32

const (
	Enums_INVALID_SERVICE Enums_ServiceType = 0
	Enums_RIDE            Enums_ServiceType = 1
	Enums_FOOD            Enums_ServiceType = 2
	Enums_PARCEL          Enums_ServiceType = 3
)

// Enum value maps for Enums_ServiceType.
var (
	Enums_ServiceType_name = map[int32]string{
		0: "INVALID_SERVICE",
		1: "RIDE",
		2: "FOOD",
		3: "PARCEL",
	}
	Enums_ServiceType_value = map[string]int32{
		"INVALID_SERVICE": 0,
		"RIDE":            1,
		"FOOD":            2,
		"PARCEL":          3,
	}
)

func (x Enums_ServiceType) Enum() *Enums_ServiceType {
	p := new(Enums_ServiceType)
	*p = x
	return p
}

func (x Enums_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[2].Descriptor()
}

func (Enums_ServiceType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[2]
}

func (x Enums_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_ServiceType.Descriptor instead.
func (Enums_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 2}
}

type Enums_LocationMethod int32

const (
	Enums_INVALID_LOCATION_METHOD Enums_LocationMethod = 0
	Enums_PATHAO_LOC_V1           Enums_LocationMethod = 1
	Enums_S2                      Enums_LocationMethod = 2
	Enums_H3                      Enums_LocationMethod = 3
)

// Enum value maps for Enums_LocationMethod.
var (
	Enums_LocationMethod_name = map[int32]string{
		0: "INVALID_LOCATION_METHOD",
		1: "PATHAO_LOC_V1",
		2: "S2",
		3: "H3",
	}
	Enums_LocationMethod_value = map[string]int32{
		"INVALID_LOCATION_METHOD": 0,
		"PATHAO_LOC_V1":           1,
		"S2":                      2,
		"H3":                      3,
	}
)

func (x Enums_LocationMethod) Enum() *Enums_LocationMethod {
	p := new(Enums_LocationMethod)
	*p = x
	return p
}

func (x Enums_LocationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_LocationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[3].Descriptor()
}

func (Enums_LocationMethod) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[3]
}

func (x Enums_LocationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_LocationMethod.Descriptor instead.
func (Enums_LocationMethod) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 3}
}

type Enums_ClientType int32

const (
	Enums_INVALID_CLIENT Enums_ClientType = 0
	Enums_USER           Enums_ClientType = 1
	Enums_DRIVER         Enums_ClientType = 2
)

// Enum value maps for Enums_ClientType.
var (
	Enums_ClientType_name = map[int32]string{
		0: "INVALID_CLIENT",
		1: "USER",
		2: "DRIVER",
	}
	Enums_ClientType_value = map[string]int32{
		"INVALID_CLIENT": 0,
		"USER":           1,
		"DRIVER":         2,
	}
)

func (x Enums_ClientType) Enum() *Enums_ClientType {
	p := new(Enums_ClientType)
	*p = x
	return p
}

func (x Enums_ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[4].Descriptor()
}

func (Enums_ClientType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[4]
}

func (x Enums_ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_ClientType.Descriptor instead.
func (Enums_ClientType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 4}
}

type Enums_RideStatus int32

const (
	Enums_INVALID_STATUS     Enums_RideStatus = 0
	Enums_NO_RIDE            Enums_RideStatus = 1
	Enums_OFF_RIDE_TO_MEETUP Enums_RideStatus = 2 //Going to meetup location
	Enums_ON_RIDE            Enums_RideStatus = 3
)

// Enum value maps for Enums_RideStatus.
var (
	Enums_RideStatus_name = map[int32]string{
		0: "INVALID_STATUS",
		1: "NO_RIDE",
		2: "OFF_RIDE_TO_MEETUP",
		3: "ON_RIDE",
	}
	Enums_RideStatus_value = map[string]int32{
		"INVALID_STATUS":     0,
		"NO_RIDE":            1,
		"OFF_RIDE_TO_MEETUP": 2,
		"ON_RIDE":            3,
	}
)

func (x Enums_RideStatus) Enum() *Enums_RideStatus {
	p := new(Enums_RideStatus)
	*p = x
	return p
}

func (x Enums_RideStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_RideStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[5].Descriptor()
}

func (Enums_RideStatus) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[5]
}

func (x Enums_RideStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_RideStatus.Descriptor instead.
func (Enums_RideStatus) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 5}
}

type Enums_VehicleType int32

const (
	Enums_INVALID_VEHICLE_TYPE Enums_VehicleType = 0
	Enums_V_BIKE               Enums_VehicleType = 1
	Enums_V_CAR                Enums_VehicleType = 2
	Enums_V_AUTO               Enums_VehicleType = 3
	Enums_V_BICYCLE            Enums_VehicleType = 4
)

// Enum value maps for Enums_VehicleType.
var (
	Enums_VehicleType_name = map[int32]string{
		0: "INVALID_VEHICLE_TYPE",
		1: "V_BIKE",
		2: "V_CAR",
		3: "V_AUTO",
		4: "V_BICYCLE",
	}
	Enums_VehicleType_value = map[string]int32{
		"INVALID_VEHICLE_TYPE": 0,
		"V_BIKE":               1,
		"V_CAR":                2,
		"V_AUTO":               3,
		"V_BICYCLE":            4,
	}
)

func (x Enums_VehicleType) Enum() *Enums_VehicleType {
	p := new(Enums_VehicleType)
	*p = x
	return p
}

func (x Enums_VehicleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_VehicleType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[6].Descriptor()
}

func (Enums_VehicleType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[6]
}

func (x Enums_VehicleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_VehicleType.Descriptor instead.
func (Enums_VehicleType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 6}
}

type Enums_VehicleCategory int32

const (
	Enums_INVALID_VEHICLE_CATEGORY Enums_VehicleCategory = 0
	Enums_VC_CAR_PLUS              Enums_VehicleCategory = 1
	Enums_VC_CAR_LITE              Enums_VehicleCategory = 2
	Enums_VC_AUTO_PRIVATE          Enums_VehicleCategory = 3
	Enums_VC_AUTO_PERMANENT        Enums_VehicleCategory = 4
)

// Enum value maps for Enums_VehicleCategory.
var (
	Enums_VehicleCategory_name = map[int32]string{
		0: "INVALID_VEHICLE_CATEGORY",
		1: "VC_CAR_PLUS",
		2: "VC_CAR_LITE",
		3: "VC_AUTO_PRIVATE",
		4: "VC_AUTO_PERMANENT",
	}
	Enums_VehicleCategory_value = map[string]int32{
		"INVALID_VEHICLE_CATEGORY": 0,
		"VC_CAR_PLUS":              1,
		"VC_CAR_LITE":              2,
		"VC_AUTO_PRIVATE":          3,
		"VC_AUTO_PERMANENT":        4,
	}
)

func (x Enums_VehicleCategory) Enum() *Enums_VehicleCategory {
	p := new(Enums_VehicleCategory)
	*p = x
	return p
}

func (x Enums_VehicleCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_VehicleCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[7].Descriptor()
}

func (Enums_VehicleCategory) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[7]
}

func (x Enums_VehicleCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_VehicleCategory.Descriptor instead.
func (Enums_VehicleCategory) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 7}
}

type Enums_Currency int32

const (
	Enums_INVALID_CURRENCY Enums_Currency = 0
	Enums_BDT              Enums_Currency = 1
	Enums_NPR              Enums_Currency = 2
)

// Enum value maps for Enums_Currency.
var (
	Enums_Currency_name = map[int32]string{
		0: "INVALID_CURRENCY",
		1: "BDT",
		2: "NPR",
	}
	Enums_Currency_value = map[string]int32{
		"INVALID_CURRENCY": 0,
		"BDT":              1,
		"NPR":              2,
	}
)

func (x Enums_Currency) Enum() *Enums_Currency {
	p := new(Enums_Currency)
	*p = x
	return p
}

func (x Enums_Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[8].Descriptor()
}

func (Enums_Currency) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[8]
}

func (x Enums_Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_Currency.Descriptor instead.
func (Enums_Currency) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 8}
}

type Enums_DriverType int32

const (
	Enums_INVALID_DRIVER_TYPE Enums_DriverType = 0
	Enums_D_BIKE              Enums_DriverType = 1
	Enums_D_CAR_PLUS          Enums_DriverType = 2
	Enums_D_BICYCLE           Enums_DriverType = 4
	Enums_D_CAR_LITE          Enums_DriverType = 5
	Enums_D_AUTO              Enums_DriverType = 6
)

// Enum value maps for Enums_DriverType.
var (
	Enums_DriverType_name = map[int32]string{
		0: "INVALID_DRIVER_TYPE",
		1: "D_BIKE",
		2: "D_CAR_PLUS",
		4: "D_BICYCLE",
		5: "D_CAR_LITE",
		6: "D_AUTO",
	}
	Enums_DriverType_value = map[string]int32{
		"INVALID_DRIVER_TYPE": 0,
		"D_BIKE":              1,
		"D_CAR_PLUS":          2,
		"D_BICYCLE":           4,
		"D_CAR_LITE":          5,
		"D_AUTO":              6,
	}
)

func (x Enums_DriverType) Enum() *Enums_DriverType {
	p := new(Enums_DriverType)
	*p = x
	return p
}

func (x Enums_DriverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_DriverType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[9].Descriptor()
}

func (Enums_DriverType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[9]
}

func (x Enums_DriverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_DriverType.Descriptor instead.
func (Enums_DriverType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 9}
}

type Enums_AccountType int32

const (
	Enums_INVALID_ACCOUNT_TYPE Enums_AccountType = 0
	Enums_BKASH                Enums_AccountType = 1
	Enums_KHALTI               Enums_AccountType = 2
	Enums_ROCKET               Enums_AccountType = 3
)

// Enum value maps for Enums_AccountType.
var (
	Enums_AccountType_name = map[int32]string{
		0: "INVALID_ACCOUNT_TYPE",
		1: "BKASH",
		2: "KHALTI",
		3: "ROCKET",
	}
	Enums_AccountType_value = map[string]int32{
		"INVALID_ACCOUNT_TYPE": 0,
		"BKASH":                1,
		"KHALTI":               2,
		"ROCKET":               3,
	}
)

func (x Enums_AccountType) Enum() *Enums_AccountType {
	p := new(Enums_AccountType)
	*p = x
	return p
}

func (x Enums_AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[10].Descriptor()
}

func (Enums_AccountType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[10]
}

func (x Enums_AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_AccountType.Descriptor instead.
func (Enums_AccountType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 10}
}

type Enums_DeviceOsType int32

const (
	Enums_INVALID_DEVICEOSTYPE Enums_DeviceOsType = 0
	Enums_ANDROID              Enums_DeviceOsType = 1
	Enums_IOS                  Enums_DeviceOsType = 2
)

// Enum value maps for Enums_DeviceOsType.
var (
	Enums_DeviceOsType_name = map[int32]string{
		0: "INVALID_DEVICEOSTYPE",
		1: "ANDROID",
		2: "IOS",
	}
	Enums_DeviceOsType_value = map[string]int32{
		"INVALID_DEVICEOSTYPE": 0,
		"ANDROID":              1,
		"IOS":                  2,
	}
)

func (x Enums_DeviceOsType) Enum() *Enums_DeviceOsType {
	p := new(Enums_DeviceOsType)
	*p = x
	return p
}

func (x Enums_DeviceOsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_DeviceOsType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[11].Descriptor()
}

func (Enums_DeviceOsType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[11]
}

func (x Enums_DeviceOsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_DeviceOsType.Descriptor instead.
func (Enums_DeviceOsType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 11}
}

type Enums_PaymentType int32

const (
	Enums_INVALID_PAYMENTTYPE Enums_PaymentType = 0
	Enums_CASH                Enums_PaymentType = 1
	Enums_DIGITAL_PAYMENT     Enums_PaymentType = 2
	Enums_PATHAO_PAY          Enums_PaymentType = 3
	Enums_PAY_LATER           Enums_PaymentType = 4
)

// Enum value maps for Enums_PaymentType.
var (
	Enums_PaymentType_name = map[int32]string{
		0: "INVALID_PAYMENTTYPE",
		1: "CASH",
		2: "DIGITAL_PAYMENT",
		3: "PATHAO_PAY",
		4: "PAY_LATER",
	}
	Enums_PaymentType_value = map[string]int32{
		"INVALID_PAYMENTTYPE": 0,
		"CASH":                1,
		"DIGITAL_PAYMENT":     2,
		"PATHAO_PAY":          3,
		"PAY_LATER":           4,
	}
)

func (x Enums_PaymentType) Enum() *Enums_PaymentType {
	p := new(Enums_PaymentType)
	*p = x
	return p
}

func (x Enums_PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[12].Descriptor()
}

func (Enums_PaymentType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[12]
}

func (x Enums_PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_PaymentType.Descriptor instead.
func (Enums_PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 12}
}

type Enums_FareDiscountType int32

const (
	Enums_INVALID_DISCOUNT_TYPE Enums_FareDiscountType = 0
	Enums_V_CASH                Enums_FareDiscountType = 1
	Enums_V_FLAT                Enums_FareDiscountType = 2
	Enums_V_CORPS               Enums_FareDiscountType = 3
)

// Enum value maps for Enums_FareDiscountType.
var (
	Enums_FareDiscountType_name = map[int32]string{
		0: "INVALID_DISCOUNT_TYPE",
		1: "V_CASH",
		2: "V_FLAT",
		3: "V_CORPS",
	}
	Enums_FareDiscountType_value = map[string]int32{
		"INVALID_DISCOUNT_TYPE": 0,
		"V_CASH":                1,
		"V_FLAT":                2,
		"V_CORPS":               3,
	}
)

func (x Enums_FareDiscountType) Enum() *Enums_FareDiscountType {
	p := new(Enums_FareDiscountType)
	*p = x
	return p
}

func (x Enums_FareDiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_FareDiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[13].Descriptor()
}

func (Enums_FareDiscountType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[13]
}

func (x Enums_FareDiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_FareDiscountType.Descriptor instead.
func (Enums_FareDiscountType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 13}
}

type Enums_PromoType int32

const (
	Enums_INVALID_PROMO_TYPE Enums_PromoType = 0
	Enums_RIDE_DISCOUNT      Enums_PromoType = 1
	Enums_RIDE_DISCOUNT_PC   Enums_PromoType = 2
	Enums_REFERRAL           Enums_PromoType = 3
)

// Enum value maps for Enums_PromoType.
var (
	Enums_PromoType_name = map[int32]string{
		0: "INVALID_PROMO_TYPE",
		1: "RIDE_DISCOUNT",
		2: "RIDE_DISCOUNT_PC",
		3: "REFERRAL",
	}
	Enums_PromoType_value = map[string]int32{
		"INVALID_PROMO_TYPE": 0,
		"RIDE_DISCOUNT":      1,
		"RIDE_DISCOUNT_PC":   2,
		"REFERRAL":           3,
	}
)

func (x Enums_PromoType) Enum() *Enums_PromoType {
	p := new(Enums_PromoType)
	*p = x
	return p
}

func (x Enums_PromoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_PromoType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[14].Descriptor()
}

func (Enums_PromoType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[14]
}

func (x Enums_PromoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_PromoType.Descriptor instead.
func (Enums_PromoType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 14}
}

type Enums_CancellationSource int32

const (
	Enums_INVALID_CANCELLATION_SOURCE Enums_CancellationSource = 0
	Enums_CS_USER                     Enums_CancellationSource = 1
	Enums_CS_DRIVER                   Enums_CancellationSource = 2
	Enums_CS_ENGINEROOM               Enums_CancellationSource = 3
)

// Enum value maps for Enums_CancellationSource.
var (
	Enums_CancellationSource_name = map[int32]string{
		0: "INVALID_CANCELLATION_SOURCE",
		1: "CS_USER",
		2: "CS_DRIVER",
		3: "CS_ENGINEROOM",
	}
	Enums_CancellationSource_value = map[string]int32{
		"INVALID_CANCELLATION_SOURCE": 0,
		"CS_USER":                     1,
		"CS_DRIVER":                   2,
		"CS_ENGINEROOM":               3,
	}
)

func (x Enums_CancellationSource) Enum() *Enums_CancellationSource {
	p := new(Enums_CancellationSource)
	*p = x
	return p
}

func (x Enums_CancellationSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_CancellationSource) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[15].Descriptor()
}

func (Enums_CancellationSource) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[15]
}

func (x Enums_CancellationSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_CancellationSource.Descriptor instead.
func (Enums_CancellationSource) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 15}
}

type Enums_DiscountType int32

const (
	Enums_INVALID_DISCOUNT_TYPE2 Enums_DiscountType = 0
	Enums_DISCOUNT               Enums_DiscountType = 1
	Enums_DISCOUNT_PC            Enums_DiscountType = 2
)

// Enum value maps for Enums_DiscountType.
var (
	Enums_DiscountType_name = map[int32]string{
		0: "INVALID_DISCOUNT_TYPE2",
		1: "DISCOUNT",
		2: "DISCOUNT_PC",
	}
	Enums_DiscountType_value = map[string]int32{
		"INVALID_DISCOUNT_TYPE2": 0,
		"DISCOUNT":               1,
		"DISCOUNT_PC":            2,
	}
)

func (x Enums_DiscountType) Enum() *Enums_DiscountType {
	p := new(Enums_DiscountType)
	*p = x
	return p
}

func (x Enums_DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[16].Descriptor()
}

func (Enums_DiscountType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[16]
}

func (x Enums_DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_DiscountType.Descriptor instead.
func (Enums_DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 16}
}

type Enums_UserStateProperty int32

const (
	Enums_INVALID_USER_STATE_PROPERTY Enums_UserStateProperty = 0
	Enums_DEVICE                      Enums_UserStateProperty = 1
)

// Enum value maps for Enums_UserStateProperty.
var (
	Enums_UserStateProperty_name = map[int32]string{
		0: "INVALID_USER_STATE_PROPERTY",
		1: "DEVICE",
	}
	Enums_UserStateProperty_value = map[string]int32{
		"INVALID_USER_STATE_PROPERTY": 0,
		"DEVICE":                      1,
	}
)

func (x Enums_UserStateProperty) Enum() *Enums_UserStateProperty {
	p := new(Enums_UserStateProperty)
	*p = x
	return p
}

func (x Enums_UserStateProperty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_UserStateProperty) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[17].Descriptor()
}

func (Enums_UserStateProperty) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[17]
}

func (x Enums_UserStateProperty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_UserStateProperty.Descriptor instead.
func (Enums_UserStateProperty) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 17}
}

type Enums_Loyalty int32

const (
	Enums_NONE_LOYALTY Enums_Loyalty = 0
	Enums_BRONZE       Enums_Loyalty = 1
	Enums_SILVER       Enums_Loyalty = 2
	Enums_GOLD         Enums_Loyalty = 3
	Enums_PLATINUM     Enums_Loyalty = 4
)

// Enum value maps for Enums_Loyalty.
var (
	Enums_Loyalty_name = map[int32]string{
		0: "NONE_LOYALTY",
		1: "BRONZE",
		2: "SILVER",
		3: "GOLD",
		4: "PLATINUM",
	}
	Enums_Loyalty_value = map[string]int32{
		"NONE_LOYALTY": 0,
		"BRONZE":       1,
		"SILVER":       2,
		"GOLD":         3,
		"PLATINUM":     4,
	}
)

func (x Enums_Loyalty) Enum() *Enums_Loyalty {
	p := new(Enums_Loyalty)
	*p = x
	return p
}

func (x Enums_Loyalty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_Loyalty) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[18].Descriptor()
}

func (Enums_Loyalty) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[18]
}

func (x Enums_Loyalty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_Loyalty.Descriptor instead.
func (Enums_Loyalty) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 18}
}

type Enums_DestinationEditionType int32

const (
	Enums_NONE_EDITION     Enums_DestinationEditionType = 0
	Enums_EDIT_DESTINATION Enums_DestinationEditionType = 1
	Enums_ADD_STOPAGE      Enums_DestinationEditionType = 2
	Enums_REMOVE_STOPAGE   Enums_DestinationEditionType = 3
	Enums_EDIT_STOPAGE     Enums_DestinationEditionType = 4
)

// Enum value maps for Enums_DestinationEditionType.
var (
	Enums_DestinationEditionType_name = map[int32]string{
		0: "NONE_EDITION",
		1: "EDIT_DESTINATION",
		2: "ADD_STOPAGE",
		3: "REMOVE_STOPAGE",
		4: "EDIT_STOPAGE",
	}
	Enums_DestinationEditionType_value = map[string]int32{
		"NONE_EDITION":     0,
		"EDIT_DESTINATION": 1,
		"ADD_STOPAGE":      2,
		"REMOVE_STOPAGE":   3,
		"EDIT_STOPAGE":     4,
	}
)

func (x Enums_DestinationEditionType) Enum() *Enums_DestinationEditionType {
	p := new(Enums_DestinationEditionType)
	*p = x
	return p
}

func (x Enums_DestinationEditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_DestinationEditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_pathao_proto_v1_common_enums_proto_enumTypes[19].Descriptor()
}

func (Enums_DestinationEditionType) Type() protoreflect.EnumType {
	return &file_pathao_proto_v1_common_enums_proto_enumTypes[19]
}

func (x Enums_DestinationEditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_DestinationEditionType.Descriptor instead.
func (Enums_DestinationEditionType) EnumDescriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0, 19}
}

type Enums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Enums) Reset() {
	*x = Enums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathao_proto_v1_common_enums_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enums) ProtoMessage() {}

func (x *Enums) ProtoReflect() protoreflect.Message {
	mi := &file_pathao_proto_v1_common_enums_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enums.ProtoReflect.Descriptor instead.
func (*Enums) Descriptor() ([]byte, []int) {
	return file_pathao_proto_v1_common_enums_proto_rawDescGZIP(), []int{0}
}

var File_pathao_proto_v1_common_enums_proto protoreflect.FileDescriptor

var file_pathao_proto_v1_common_enums_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x61, 0x74, 0x68, 0x61, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x61, 0x74, 0x68, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xf1, 0x0d, 0x0a,
	0x05, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x08, 0x52, 0x69, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x49,
	0x44, 0x45, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x49, 0x4b, 0x45,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x42, 0x49, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x41, 0x52, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x06, 0x22, 0x8f, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41,
	0x43, 0x4b, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x4f, 0x52, 0x49, 0x45, 0x53, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4c, 0x45, 0x43,
	0x54, 0x52, 0x4f, 0x4e, 0x49, 0x43, 0x53, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x49, 0x46,
	0x54, 0x53, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x45, 0x52, 0x49, 0x53, 0x48, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x4f, 0x4d, 0x45, 0x4d, 0x41, 0x44, 0x45,
	0x5f, 0x46, 0x4f, 0x4f, 0x44, 0x10, 0x07, 0x22, 0x42, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52,
	0x49, 0x44, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x50, 0x41, 0x52, 0x43, 0x45, 0x4c, 0x10, 0x03, 0x22, 0x50, 0x0a, 0x0e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a,
	0x17, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41,
	0x54, 0x48, 0x41, 0x4f, 0x5f, 0x4c, 0x4f, 0x43, 0x5f, 0x56, 0x31, 0x10, 0x01, 0x12, 0x06, 0x0a,
	0x02, 0x53, 0x32, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x33, 0x10, 0x03, 0x22, 0x36, 0x0a,
	0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x52, 0x49,
	0x56, 0x45, 0x52, 0x10, 0x02, 0x22, 0x52, 0x0a, 0x0a, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x52, 0x49,
	0x44, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x46, 0x46, 0x5f, 0x52, 0x49, 0x44, 0x45,
	0x5f, 0x54, 0x4f, 0x5f, 0x4d, 0x45, 0x45, 0x54, 0x55, 0x50, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x4e, 0x5f, 0x52, 0x49, 0x44, 0x45, 0x10, 0x03, 0x22, 0x59, 0x0a, 0x0b, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x5f, 0x42, 0x49, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x56, 0x5f, 0x43, 0x41, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x5f, 0x42, 0x49, 0x43, 0x59, 0x43,
	0x4c, 0x45, 0x10, 0x04, 0x22, 0x7d, 0x0a, 0x0f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x56, 0x45, 0x48, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47,
	0x4f, 0x52, 0x59, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x43, 0x5f, 0x43, 0x41, 0x52, 0x5f,
	0x50, 0x4c, 0x55, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x43, 0x5f, 0x43, 0x41, 0x52,
	0x5f, 0x4c, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x43, 0x5f, 0x41, 0x55,
	0x54, 0x4f, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11,
	0x56, 0x43, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e,
	0x54, 0x10, 0x04, 0x22, 0x32, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x44, 0x54, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x50, 0x52, 0x10, 0x02, 0x22, 0x6c, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x5f, 0x42, 0x49, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x5f,
	0x43, 0x41, 0x52, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x5f,
	0x42, 0x49, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x5f, 0x43,
	0x41, 0x52, 0x5f, 0x4c, 0x49, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x06, 0x22, 0x4a, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x4b, 0x41, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x48, 0x41,
	0x4c, 0x54, 0x49, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x10,
	0x03, 0x22, 0x3e, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x56,
	0x49, 0x43, 0x45, 0x4f, 0x53, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10,
	0x02, 0x22, 0x64, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x41, 0x53,
	0x48, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x47, 0x49, 0x54, 0x41, 0x4c, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x54, 0x48,
	0x41, 0x4f, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x59, 0x5f,
	0x4c, 0x41, 0x54, 0x45, 0x52, 0x10, 0x04, 0x22, 0x52, 0x0a, 0x10, 0x46, 0x61, 0x72, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x5f, 0x43, 0x41, 0x53, 0x48,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x56, 0x5f, 0x43, 0x4f, 0x52, 0x50, 0x53, 0x10, 0x03, 0x22, 0x5a, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x49, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x49, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x50, 0x43, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x46,
	0x45, 0x52, 0x52, 0x41, 0x4c, 0x10, 0x03, 0x22, 0x64, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x1b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x53, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x53,
	0x5f, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x03, 0x22, 0x49, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x32, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x50, 0x43, 0x10, 0x02, 0x22, 0x40, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x1b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x22, 0x4b, 0x0a, 0x07, 0x4c, 0x6f,
	0x79, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x4c, 0x4f,
	0x59, 0x41, 0x4c, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x52, 0x4f, 0x4e, 0x5a,
	0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4c, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x47, 0x4f, 0x4c, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41,
	0x54, 0x49, 0x4e, 0x55, 0x4d, 0x10, 0x04, 0x22, 0x77, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54,
	0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x44, 0x44,
	0x5f, 0x53, 0x54, 0x4f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45,
	0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x04,
	0x42, 0x18, 0x5a, 0x16, 0x70, 0x61, 0x74, 0x68, 0x61, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pathao_proto_v1_common_enums_proto_rawDescOnce sync.Once
	file_pathao_proto_v1_common_enums_proto_rawDescData = file_pathao_proto_v1_common_enums_proto_rawDesc
)

func file_pathao_proto_v1_common_enums_proto_rawDescGZIP() []byte {
	file_pathao_proto_v1_common_enums_proto_rawDescOnce.Do(func() {
		file_pathao_proto_v1_common_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_pathao_proto_v1_common_enums_proto_rawDescData)
	})
	return file_pathao_proto_v1_common_enums_proto_rawDescData
}

var file_pathao_proto_v1_common_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 20)
var file_pathao_proto_v1_common_enums_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pathao_proto_v1_common_enums_proto_goTypes = []interface{}{
	(Enums_RideType)(0),               // 0: pathao.proto.v1.common.Enums.RideType
	(Enums_ParcelType)(0),             // 1: pathao.proto.v1.common.Enums.ParcelType
	(Enums_ServiceType)(0),            // 2: pathao.proto.v1.common.Enums.ServiceType
	(Enums_LocationMethod)(0),         // 3: pathao.proto.v1.common.Enums.LocationMethod
	(Enums_ClientType)(0),             // 4: pathao.proto.v1.common.Enums.ClientType
	(Enums_RideStatus)(0),             // 5: pathao.proto.v1.common.Enums.RideStatus
	(Enums_VehicleType)(0),            // 6: pathao.proto.v1.common.Enums.VehicleType
	(Enums_VehicleCategory)(0),        // 7: pathao.proto.v1.common.Enums.VehicleCategory
	(Enums_Currency)(0),               // 8: pathao.proto.v1.common.Enums.Currency
	(Enums_DriverType)(0),             // 9: pathao.proto.v1.common.Enums.DriverType
	(Enums_AccountType)(0),            // 10: pathao.proto.v1.common.Enums.AccountType
	(Enums_DeviceOsType)(0),           // 11: pathao.proto.v1.common.Enums.DeviceOsType
	(Enums_PaymentType)(0),            // 12: pathao.proto.v1.common.Enums.PaymentType
	(Enums_FareDiscountType)(0),       // 13: pathao.proto.v1.common.Enums.FareDiscountType
	(Enums_PromoType)(0),              // 14: pathao.proto.v1.common.Enums.PromoType
	(Enums_CancellationSource)(0),     // 15: pathao.proto.v1.common.Enums.CancellationSource
	(Enums_DiscountType)(0),           // 16: pathao.proto.v1.common.Enums.DiscountType
	(Enums_UserStateProperty)(0),      // 17: pathao.proto.v1.common.Enums.UserStateProperty
	(Enums_Loyalty)(0),                // 18: pathao.proto.v1.common.Enums.Loyalty
	(Enums_DestinationEditionType)(0), // 19: pathao.proto.v1.common.Enums.DestinationEditionType
	(*Enums)(nil),                     // 20: pathao.proto.v1.common.Enums
}
var file_pathao_proto_v1_common_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pathao_proto_v1_common_enums_proto_init() }
func file_pathao_proto_v1_common_enums_proto_init() {
	if File_pathao_proto_v1_common_enums_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pathao_proto_v1_common_enums_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pathao_proto_v1_common_enums_proto_rawDesc,
			NumEnums:      20,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pathao_proto_v1_common_enums_proto_goTypes,
		DependencyIndexes: file_pathao_proto_v1_common_enums_proto_depIdxs,
		EnumInfos:         file_pathao_proto_v1_common_enums_proto_enumTypes,
		MessageInfos:      file_pathao_proto_v1_common_enums_proto_msgTypes,
	}.Build()
	File_pathao_proto_v1_common_enums_proto = out.File
	file_pathao_proto_v1_common_enums_proto_rawDesc = nil
	file_pathao_proto_v1_common_enums_proto_goTypes = nil
	file_pathao_proto_v1_common_enums_proto_depIdxs = nil
}
